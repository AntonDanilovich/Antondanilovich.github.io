import java.time.LocalDate;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class WordGuessingGame {
    private static final String[] WORDS = {
        "novel", "poem", "prose", "essay", "drama", "lyric", "theme", "story", "plot", "title",
        "scene", "genre", "fable", "verse", "plays", "rhyme", "epics", "canon", "trope", "quote",
        "drafts", "books", "texts", "edits", "print"
    };
    private static final Set<String> VALID_WORDS = new HashSet<>(Arrays.asList(
        "novel", "poem", "prose", "essay", "drama", "lyric", "theme", "story", "plot", "title",
        "scene", "genre", "fable", "verse", "plays", "rhyme", "epics", "canon", "trope", "quote",
        "drafts", "books", "texts", "edits", "print", "audio", "every", "never", "quiet", "ready"
        // Add more valid words here
    ));
    private static final int MAX_TRIES = 6;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String secretWord = getDailyWord();
        int attempts = 0;

        System.out.println("Welcome to the Word Guessing Game!");
        System.out.println("You have " + MAX_TRIES + " attempts to guess the five-letter word.");

        while (attempts < MAX_TRIES) {
            System.out.print("Enter your guess: ");
            String guess = scanner.next().toLowerCase();

            if (guess.length() != 5) {
                System.out.println("Please enter a five-letter word.");
                continue;
            }

            if (!VALID_WORDS.contains(guess)) {
                System.out.println("Invalid word. Please enter a valid five-letter word.");
                continue;
            }

            attempts++;
            if (guess.equals(secretWord)) {
                System.out.println("Congratulations! You've guessed the word correctly.");
                break;
            } else {
                giveFeedback(secretWord, guess);
            }

            if (attempts == MAX_TRIES) {
                System.out.println("Sorry, you've used all your attempts. The word was: " + secretWord);
            }
        }

        scanner.close();
    }

    private static String getDailyWord() {
        LocalDate today = LocalDate.now();
        int index = today.getDayOfYear() % WORDS.length;
        return WORDS[index];
    }

    private static void giveFeedback(String secretWord, String guess) {
        char[] feedback = new char[5];
        boolean[] secretWordMatched = new boolean[5];
        boolean[] guessMatched = new boolean[5];

        // Initialize feedback with '-'
        for (int i = 0; i < 5; i++) {
            feedback[i] = '-';
        }

        // First pass: Check for correct letters in correct positions
        for (int i = 0; i < 5; i++) {
            if (guess.charAt(i) == secretWord.charAt(i)) {
                feedback[i] = guess.charAt(i);
                secretWordMatched[i] = true;
                guessMatched[i] = true;
            }
        }

        // Second pass: Check for correct letters in incorrect positions
        for (int i = 0; i < 5; i++) {
            if (!guessMatched[i]) {
                for (int j = 0; j < 5; j++) {
                    if (!secretWordMatched[j] && guess.charAt(i) == secretWord.charAt(j)) {
                        feedback[i] = Character.toLowerCase(guess.charAt(i));
                        secretWordMatched[j] = true;
                        break;
                    }
                }
            }
        }

        System.out.println("Feedback: " + new String(feedback));
    }
}
